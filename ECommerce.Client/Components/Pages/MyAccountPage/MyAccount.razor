@page "/MyAccount"
@using ECommerce.Client.Services
@using ECommerce.Contracts.Requests
@using ECommerce.Contracts.Responses
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject IAuthService AuthService
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject IMyAccountService MyAccountService

@code {
    MudDataGrid<OrderResponse> dataGrid;

    private bool isAuthenticated = false;

    private SignInRequest _signInRequest = new()
    {
        Email = string.Empty,
        Password = string.Empty
    };

    protected override async Task OnInitializedAsync()
    {
        var availableJwt = await ProtectedSessionStorage.GetAsync<string>("jwt");
        // var authState = await AuthService.IsSignedIn();
        // TODO: implement verify token
        if (availableJwt.Success)
        {
            isAuthenticated = true;
        }
    }

    public async Task SignIn()
    {
        var signIn = await AuthService.SignInAsync(_signInRequest);
        await ProtectedSessionStorage.SetAsync("jwt", signIn.Token);
        isAuthenticated = true;
    }
    
     private async Task<GridData<OrderResponse>> ServerReload(GridState<OrderResponse> state)
     { 
         var jwt = await ProtectedSessionStorage.GetAsync<string>("jwt"); 
         var data = (await MyAccountService.GetMyOrdersAsync(jwt.Value)).Items;
         
         var totalItems = data.Count();
         
         var pagedData = data.Skip(state.Page * state.PageSize).Take(state.PageSize).ToArray();
         return new GridData<OrderResponse>
         {
             TotalItems = totalItems,
             Items = pagedData
         };
    }
}

@if (isAuthenticated)
{
<MudCard>
    <MudCardHeader>
        My Account
    </MudCardHeader>
    <MudCardContent>
        My information...
    </MudCardContent>
</MudCard>
<MudCard>
    <MudCardHeader>
        My Orders
    </MudCardHeader>
    <MudCardContent>
        <MudDataGrid
            Striped="true"
            @ref="dataGrid"
            T="OrderResponse"
            ServerData="ServerReload"
            Filterable="false"
            ReadOnly="true">
            
            <Columns>
                <HierarchyColumn/>
                <PropertyColumn Property="x => x.Id" Title="Order Id"/>
                <PropertyColumn Property="x => x.OrderDate" Title="Order Date"/>
                <PropertyColumn Property="x => x.Status" Title="Status"/>
            </Columns>

            <ChildRowContent>
                <MudCard Outlined="true">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Products In Order:</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTable Outlined="true" Items="@context.Item.Products" Hover="true" Breakpoint="Breakpoint.Sm"
                                  LoadingProgressColor="Color.Info">
                            <HeaderContent>
                                <MudTh>Id</MudTh>
                                <MudTh>Name</MudTh>
                                <MudTh>Description</MudTh>
                                <MudTh>Category</MudTh>
                                <MudTh>Price</MudTh>
                                <MudTh>Status</MudTh>
                            </HeaderContent>
                            <RowTemplate Context="SubContext">
                                <MudTd DataLabel="Id">@SubContext.Id</MudTd>
                                <MudTd DataLabel="Name">@SubContext.Name</MudTd>
                                <MudTd DataLabel="Description">@SubContext.Description</MudTd>
                                <MudTd DataLabel="Category">@SubContext.Category</MudTd>
                                <MudTd DataLabel="Price">@SubContext.Price</MudTd>
                                <MudTd DataLabel="Status">@SubContext.Status</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudCardContent>
                </MudCard>
            </ChildRowContent>

            <PagerContent>
                <MudDataGridPager T="OrderResponse"/>
            </PagerContent>
        </MudDataGrid>
    </MudCardContent>
</MudCard>
}
else
{ 
<EditForm Model="_signInRequest" OnValidSubmit="SignIn">
    <MudCard>
        <MudCardHeader>
            Access Denied, please sign in!
        </MudCardHeader>
        <MudCardContent>
                        <DataAnnotationsValidator/>
                        <MudTextField @bind-Value="_signInRequest.Email" Label="Email" Required="true"/>
                        <MudTextField @bind-Value="_signInRequest.Password" InputType="InputType.Password" Label="Password" Required="true"/>
                        
                        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Sign In</MudButton>
        </MudCardContent>
    </MudCard>
</EditForm>
}
